<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1257">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="Comparison%20Operators%20IN%20Php_files/filelist.xml">
<title>Comparison Operators</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>EDEN</o:Author>
  <o:LastAuthor>EDEN</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2015-02-21T14:10:00Z</o:Created>
  <o:LastSaved>2015-02-21T14:10:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1154</o:Words>
  <o:Characters>6578</o:Characters>
  <o:Company>E</o:Company>
  <o:Lines>54</o:Lines>
  <o:Paragraphs>15</o:Paragraphs>
  <o:CharactersWithSpaces>7717</o:CharactersWithSpaces>
  <o:Version>11.9999</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;
	font-weight:bold;}
h2
	{mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:13.0pt;
	font-family:Arial;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
p.simpara, li.simpara, div.simpara
	{mso-style-name:simpara;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.para, li.para, div.para
	{mso-style-name:para;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.type
	{mso-style-name:type;}
span.function
	{mso-style-name:function;}
span.replaceable
	{mso-style-name:replaceable;}
span.simpara1
	{mso-style-name:simpara1;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:27.0pt 45.0pt 27.0pt 27.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:36.0pt'>

<div class=Section1>

<h2 align=center style='text-align:center'>Comparison Operators</h2>

<p class=simpara>Comparison operators, as their name implies, allow you to
compare two values. You may also be interested in viewing <a
href="http://php.net/manual/en/types.comparisons.php">the type comparison
tables</a>, as they show examples of various type related comparisons. </p>

<table class=MsoNormalTable border=0 cellpadding=0 style='mso-cellspacing:1.5pt'>
 <thead>
  <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
   <td colspan=3 style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><strong>Comparison
   Operators</strong></p>
   </td>
  </tr>
  <tr style='mso-yfti-irow:1'>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Example<o:p></o:p></b></p>
   </td>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Name<o:p></o:p></b></p>
   </td>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Result<o:p></o:p></b></p>
   </td>
  </tr>
 </thead>
 <tr style='mso-yfti-irow:2'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a == $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Equal</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$<span class=GramE>a<span style='font-style:normal'> is</span></span></var>
  equal to <var>$b</var> after type juggling.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a === $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Identical</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$<span class=GramE>a<span style='font-style:normal'> is</span></span></var>
  equal to <var>$b</var>, and they are of the same type. </p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a != $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Not equal</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$<span class=GramE>a<span style='font-style:normal'> is</span></span></var>
  not equal to <var>$b</var> after type juggling.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a &lt;&gt; $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Not equal</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$<span class=GramE>a<span style='font-style:normal'> is</span></span></var>
  not equal to <var>$b</var> after type juggling.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a !== $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Not identical</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$<span class=GramE>a<span style='font-style:normal'> is</span></span></var>
  not equal to <var>$b</var>, or they are not of the same type. </p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a &lt; $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Less than</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$a</var> is strictly less than <var>$b</var>.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a &gt; $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Greater than</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$a</var> is strictly greater than <var>$b</var>.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:9'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a &lt;= $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Less than or equal to </p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$a</var> is less than or equal to <var>$b</var>.</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:10;mso-yfti-lastrow:yes'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>$a &gt;= $b</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Greater than or equal to </p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><code><b><span style='font-size:10.0pt'>TRUE</span></b></code>
  if <var>$a</var> is greater than or equal to <var>$b</var>.</p>
  </td>
 </tr>
</table>

<p class=para>If you compare a number with a string or the comparison involves
numerical strings, then each string is <a
href="http://php.net/manual/en/language.types.string.php#language.types.string.conversion">converted
to a number</a> and the comparison performed numerically. These rules also
apply to the <a href="http://php.net/manual/en/control-structures.switch.php">switch</a>
statement. The type conversion does not take place when the comparison is === <span
class=GramE>or !</span>== as this involves comparing the type as well as the
value. </p>

<p class=MsoNormal><code><span style='font-size:10.0pt;color:#0000BB'>&lt;?<span
class=SpellE>php</span></span></code><span style='font-size:10.0pt;font-family:
"Courier New";color:#0000BB'><br>
<span class=SpellE><code>var_dump</code></span></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>0&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;a&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;0&nbsp;==&nbsp;0&nbsp;-&gt;&nbsp;true</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;1&quot;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;01&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;1&nbsp;==&nbsp;1&nbsp;-&gt;&nbsp;true</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;10&quot;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;1e1&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;10&nbsp;==&nbsp;10&nbsp;-&gt;&nbsp;true</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>100&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;1e2&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;100&nbsp;==&nbsp;100&nbsp;-&gt;&nbsp;true</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<br>
</span><code><span style='font-size:10.0pt;color:#007700'>switch&nbsp;(</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;a&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>)&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>case&nbsp;</code></span><code><span style='font-size:10.0pt;color:#0000BB'>0</span></code><code><span
style='font-size:10.0pt;color:#007700'>:</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#DD0000'>&quot;0&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>;</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;break;</code><br>
<code>case&nbsp;</code></span><code><span style='font-size:10.0pt;color:#DD0000'>&quot;a&quot;</span></code><code><span
style='font-size:10.0pt;color:#007700'>:&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;never&nbsp;reached&nbsp;because&nbsp;&quot;a&quot;&nbsp;is&nbsp;already&nbsp;matched&nbsp;with&nbsp;0</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span style='font-size:10.0pt;
color:#007700'>echo&nbsp;</span></code><code><span style='font-size:10.0pt;
color:#DD0000'>&quot;a&quot;</span></code><code><span style='font-size:10.0pt;
color:#007700'>;</span></code><span style='font-size:10.0pt;font-family:"Courier New";
color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;break;</code><br>
<code>}</code><br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>?&gt;</span></code><code><span
style='font-size:10.0pt;color:black'> </span></code></p>

<p class=para>For various types, comparison is done according to the following
table (in order). </p>

<table class=MsoNormalTable border=0 cellpadding=0 style='mso-cellspacing:1.5pt'>
 <thead>
  <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes'>
   <td colspan=3 style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><strong>Comparison
   with Various Types</strong></p>
   </td>
  </tr>
  <tr style='mso-yfti-irow:1'>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Type of Operand
   1<o:p></o:p></b></p>
   </td>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Type of Operand
   2<o:p></o:p></b></p>
   </td>
   <td style='padding:.75pt .75pt .75pt .75pt'>
   <p class=MsoNormal align=center style='text-align:center'><b>Result<o:p></o:p></b></p>
   </td>
  </tr>
 </thead>
 <tr style='mso-yfti-irow:2'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.null.php">null</a></span> or <span
  class=type><a href="http://php.net/manual/en/language.types.string.php">string</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.string.php">string</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Convert <code><b><span style='font-size:10.0pt'>NULL</span></b></code>
  to &quot;&quot;, numerical or lexical comparison</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.boolean.php"><span
  class=SpellE>bool</span></a></span> or <span class=type><a
  href="http://php.net/manual/en/language.types.null.php">null</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>anything</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Convert both sides to <span class=type><a
  href="http://php.net/manual/en/language.types.boolean.php"><span
  class=SpellE>bool</span></a></span>, <code><b><span style='font-size:10.0pt'>FALSE</span></b></code>
  &lt; <code><b><span style='font-size:10.0pt'>TRUE</span></b></code></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.object.php">object</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.object.php">object</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Built-in classes can define its own comparison, different
  classes are <span class=SpellE>uncomparable</span>, same class - compare
  properties the same way as arrays (PHP 4), PHP 5 has its own <a
  href="http://php.net/manual/en/language.oop5.object-comparison.php">explanation</a>
  </p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.string.php">string</a></span>, <span
  class=type><a href="http://php.net/manual/en/language.types.resource.php">resource</a></span>
  or <span class=type><a
  href="http://php.net/manual/en/language.pseudo-types.php#language.types.number">number</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.string.php">string</a></span>, <span
  class=type><a href="http://php.net/manual/en/language.types.resource.php">resource</a></span>
  or <span class=type><a
  href="http://php.net/manual/en/language.pseudo-types.php#language.types.number">number</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Translate strings and resources to numbers, usual math</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:6'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.array.php">array</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.array.php">array</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>Array with fewer members is smaller, if key from operand 1
  is not found in operand 2 then arrays are <span class=SpellE>uncomparable</span>,
  otherwise - compare value by value (see following example)</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:7'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.object.php">object</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>anything</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.object.php">object</a></span>
  is always greater</p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:8;mso-yfti-lastrow:yes'>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.array.php">array</a></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal>anything</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span class=type><a
  href="http://php.net/manual/en/language.types.array.php">array</a></span> is
  always greater</p>
  </td>
 </tr>
</table>

<p><strong>Example #1 Boolean/null comparison</strong></p>

<p class=MsoNormal><code><span style='font-size:10.0pt;color:#0000BB'>&lt;?<span
class=SpellE>php</span></span></code><span style='font-size:10.0pt;font-family:
"Courier New";color:#0000BB'><br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;<span
class=SpellE>Bool</span>&nbsp;and&nbsp;null&nbsp;are&nbsp;compared&nbsp;as&nbsp;<span
class=SpellE>bool</span>&nbsp;always</span></code><span style='font-size:10.0pt;
font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>1&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>TRUE</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;TRUE&nbsp;-&nbsp;same&nbsp;as&nbsp;(<span
class=SpellE>bool</span>)1&nbsp;==&nbsp;TRUE</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>0&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>==&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>FALSE</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;TRUE&nbsp;-&nbsp;same&nbsp;as&nbsp;(<span
class=SpellE>bool</span>)0&nbsp;==&nbsp;FALSE</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>100&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>&lt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>TRUE</span></code><code><span
style='font-size:10.0pt;color:#007700'>);&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;FALSE&nbsp;-&nbsp;same&nbsp;as&nbsp;(<span
class=SpellE>bool</span>)100&nbsp;&lt;&nbsp;TRUE</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(-</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>10&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>&lt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>FALSE</span></code><code><span
style='font-size:10.0pt;color:#007700'>);</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;FALSE&nbsp;-&nbsp;same&nbsp;as&nbsp;(<span
class=SpellE>bool</span>)-10&nbsp;&lt;&nbsp;FALSE</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><span class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>var_dump</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>min</span></code><code><span
style='font-size:10.0pt;color:#007700'>(-</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>100</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;-</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>10</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>NULL</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>10</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>100</span></code><code><span
style='font-size:10.0pt;color:#007700'>));&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;NULL&nbsp;-&nbsp;(<span
class=SpellE>bool</span>)NULL&nbsp;&lt;&nbsp;(<span class=SpellE>bool</span>)-100&nbsp;is&nbsp;FALSE&nbsp;&lt;&nbsp;TRUE</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>?&gt;</span></code><code><span
style='font-size:10.0pt;color:black'> </span></code></p>

<p><strong>Example #2 Transcription of standard array comparison</strong></p>

<p class=MsoNormal><code><span style='font-size:10.0pt;color:#0000BB'>&lt;?<span
class=SpellE>php</span></span></code><span style='font-size:10.0pt;font-family:
"Courier New";color:#0000BB'><br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;Arrays&nbsp;are&nbsp;compared&nbsp;like&nbsp;this&nbsp;with&nbsp;standard&nbsp;comparison&nbsp;operators</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#007700'>function&nbsp;</span></code><span
class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>standard_array_compare</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op1</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>)</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>{</code><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>count</span></code><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op1</span></code><code><span
style='font-size:10.0pt;color:#007700'>)&nbsp;&lt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>count</span></code><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>))&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>1</span></code><code><span
style='font-size:10.0pt;color:#007700'>;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;$op1&nbsp;&lt;&nbsp;$op2</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span style='font-size:10.0pt;
color:#007700'>}&nbsp;<span class=SpellE>elseif</span>&nbsp;(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>count</span></code><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op1</span></code><code><span
style='font-size:10.0pt;color:#007700'>)&nbsp;&gt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>count</span></code><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>))&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>1</span></code><code><span
style='font-size:10.0pt;color:#007700'>;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;$op1&nbsp;&gt;&nbsp;$op2</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span style='font-size:10.0pt;
color:#007700'>}</span></code><span style='font-size:10.0pt;font-family:"Courier New";
color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;<span class=SpellE>foreach</span>&nbsp;(</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>$op1&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>as&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$key&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>=&gt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$<span class=SpellE>val</span></span></code><code><span
style='font-size:10.0pt;color:#007700'>)&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!</code></span><span
class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>array_key_exists</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$key</span></code><code><span
style='font-size:10.0pt;color:#007700'>,&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>))&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>null</span></code><code><span
style='font-size:10.0pt;color:#007700'>;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;<span class=SpellE>uncomparable</span></span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#007700'>}&nbsp;<span class=SpellE>elseif</span>&nbsp;(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$<span class=SpellE>val</span>&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>&lt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>[</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$key</span></code><code><span
style='font-size:10.0pt;color:#007700'>])&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>1</span></code><code><span
style='font-size:10.0pt;color:#007700'>;</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span
class=SpellE>elseif</span>&nbsp;(</code></span><code><span style='font-size:
10.0pt;color:#0000BB'>$<span class=SpellE>val</span>&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>&gt;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$op2</span></code><code><span
style='font-size:10.0pt;color:#007700'>[</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$key</span></code><code><span
style='font-size:10.0pt;color:#007700'>])&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>1</span></code><code><span
style='font-size:10.0pt;color:#007700'>;</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;}</code><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</code></span><code><span
style='font-size:10.0pt;color:#0000BB'>0</span></code><code><span
style='font-size:10.0pt;color:#007700'>;&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#FF8000'>//&nbsp;$op1&nbsp;==&nbsp;$op2</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#007700'>}</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>?&gt;</span></code><code><span
style='font-size:10.0pt;color:black'> </span></code></p>

<p class=para>See also <span class=function><a
href="http://php.net/manual/en/function.strcasecmp.php"><span class=SpellE><span
class=GramE>strcasecmp</span></span><span class=GramE>(</span>)</a></span>, <span
class=function><a href="http://php.net/manual/en/function.strcmp.php"><span
class=SpellE>strcmp</span>()</a></span>, <a
href="http://php.net/manual/en/language.operators.array.php">Array operators</a>,
and the manual section on <a href="http://php.net/manual/en/language.types.php">Types</a>.
</p>

<p class=MsoNormal><strong>Warning</strong> </p>

<h1 align=center style='text-align:center'>Comparison of floating point numbers</h1>

<p class=para>Because of the way <span class=type><a
href="http://php.net/manual/en/language.types.float.php">float</a></span>s are
represented internally, you should not test two <span class=type><a
href="http://php.net/manual/en/language.types.float.php">float</a></span>s for
equality. </p>

<p class=para>See the documentation for <span class=type><a
href="http://php.net/manual/en/language.types.float.php">float</a></span> for
more information. </p>

<h3 align=center style='text-align:center'>Ternary Operator</h3>

<p class=para>Another conditional operator is the &quot;<span class=GramE>?:</span>&quot;
(or ternary) operator. </p>

<p><strong>Example #3 <span class=GramE>Assigning</span> a default value</strong></p>

<p class=MsoNormal><span class=GramE><code><span style='font-size:10.0pt;
color:#0000BB'>&lt;?<span class=SpellE>php</span></span></code></span><span
style='font-size:10.0pt;font-family:"Courier New";color:#0000BB'><br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;Example&nbsp;usage&nbsp;for:&nbsp;Ternary&nbsp;Operator</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>$action&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>=&nbsp;(empty(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$_POST</span></code><code><span
style='font-size:10.0pt;color:#007700'>[</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'action'</span></code><code><span
style='font-size:10.0pt;color:#007700'>]))&nbsp;?&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'<span class=GramE>default</span>'&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>:&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$_POST</span></code><code><span
style='font-size:10.0pt;color:#007700'>[</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'action'</span></code><code><span
style='font-size:10.0pt;color:#007700'>];</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;The&nbsp;above&nbsp;is&nbsp;identical&nbsp;to&nbsp;this&nbsp;if/else&nbsp;statement</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#007700'>if&nbsp;(empty(</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>$_POST</span></code><code><span
style='font-size:10.0pt;color:#007700'>[</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'action'</span></code><code><span
style='font-size:10.0pt;color:#007700'>]))&nbsp;{</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#007700'><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span style='font-size:10.0pt;
color:#0000BB'>$action&nbsp;</span></code><code><span style='font-size:10.0pt;
color:#007700'>=&nbsp;</span></code><code><span style='font-size:10.0pt;
color:#DD0000'>'default'</span></code><code><span style='font-size:10.0pt;
color:#007700'>;</span></code><span style='font-size:10.0pt;font-family:"Courier New";
color:#007700'><br>
<code>}&nbsp;else&nbsp;{</code><br>
<code>&nbsp;&nbsp;&nbsp;&nbsp;</code></span><code><span style='font-size:10.0pt;
color:#0000BB'>$action&nbsp;</span></code><code><span style='font-size:10.0pt;
color:#007700'>=&nbsp;</span></code><code><span style='font-size:10.0pt;
color:#0000BB'>$_POST</span></code><code><span style='font-size:10.0pt;
color:#007700'>[</span></code><code><span style='font-size:10.0pt;color:#DD0000'>'action'</span></code><code><span
style='font-size:10.0pt;color:#007700'>];</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<code>}</code><br>
<br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>?&gt;</span></code><code><span
style='font-size:10.0pt;color:black'> </span></code></p>

<p class=MsoNormal>The expression <em>(expr1<span class=GramE>) ?</span> (expr2<span
class=GramE>) :</span> (expr3)</em> evaluates to <span class=replaceable>expr2</span>
if <span class=replaceable>expr1</span> evaluates to <code><b><span
style='font-size:10.0pt'>TRUE</span></b></code>, and <span class=replaceable>expr3</span>
if <span class=replaceable>expr1</span> evaluates to <code><b><span
style='font-size:10.0pt'>FALSE</span></b></code>. </p>

<p class=para>Since PHP 5.3, it is possible to leave out the middle part of the
ternary operator. Expression <span class=GramE><em>expr1 ?</em></span><em>:
expr3</em> returns <span class=replaceable>expr1</span> if <span
class=replaceable>expr1</span> evaluates to <code><b><span style='font-size:
10.0pt'>TRUE</span></b></code>, and <span class=replaceable>expr3</span>
otherwise. </p>

<p><strong>Note</strong>: <span class=simpara1>Please note that the ternary
operator is an expression, and that it doesn't evaluate to a variable, but to
the result of an expression. This is important to know if you want to return a
variable by reference. The statement </span><em>return $<span class=SpellE>var</span>
== <span class=GramE>42 ?</span> $<span class=GramE>a :</span> $b;</em><span
class=simpara1> in a return-by-reference function will therefore not work and a
warning is issued in later PHP versions. </span></p>

<p><strong>Note</strong>: </p>

<p class=para>It is recommended that you avoid &quot;stacking&quot; ternary
expressions. <span class=SpellE>PHP's</span> <span class=SpellE>behaviour</span>
when using more than one ternary operator within a single statement is
non-obvious: </p>

<p><strong>Example #4 Non-obvious Ternary <span class=SpellE>Behaviour</span></strong></p>

<p class=MsoNormal><span class=GramE><code><span style='font-size:10.0pt;
color:#0000BB'>&lt;?<span class=SpellE>php</span></span></code></span><span
style='font-size:10.0pt;font-family:"Courier New";color:#0000BB'><br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;on&nbsp;first&nbsp;glance,&nbsp;the&nbsp;following&nbsp;appears&nbsp;to&nbsp;output&nbsp;'true'</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
</span><code><span style='font-size:10.0pt;color:#007700'>echo&nbsp;(</span></code><span
class=SpellE><code><span style='font-size:10.0pt;color:#0000BB'>true</span></code><code><span
style='font-size:10.0pt;color:#007700'>?</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'<span class=GramE>true</span>'</span></code><code><span
style='font-size:10.0pt;color:#007700'>:</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>false</span></code><code><span
style='font-size:10.0pt;color:#007700'>?</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'<span class=GramE>t</span>'</span></code><code><span
style='font-size:10.0pt;color:#007700'>:</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'f</span></code></span><code><span
style='font-size:10.0pt;color:#DD0000'>'</span></code><code><span
style='font-size:10.0pt;color:#007700'>);</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;however,&nbsp;the&nbsp;actual&nbsp;output&nbsp;of&nbsp;the&nbsp;above&nbsp;is&nbsp;'t'</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>//&nbsp;this&nbsp;is&nbsp;because&nbsp;ternary&nbsp;expressions&nbsp;are&nbsp;evaluated&nbsp;from&nbsp;left&nbsp;to&nbsp;right</code><br>
<br>
<code>//&nbsp;the&nbsp;following&nbsp;is&nbsp;a&nbsp;more&nbsp;obvious&nbsp;version&nbsp;of&nbsp;the&nbsp;same&nbsp;code&nbsp;as&nbsp;above</code><br>
</span><code><span style='font-size:10.0pt;color:#007700'>echo&nbsp;((</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>true&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>?&nbsp;</span></code><span class=GramE><code><span
style='font-size:10.0pt;color:#DD0000'>'true'&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>:</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#0000BB'>false</span></code><code><span
style='font-size:10.0pt;color:#007700'>)&nbsp;?&nbsp;</span></code><span
class=GramE><code><span style='font-size:10.0pt;color:#DD0000'>'t'&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#007700'>:</span></code></span><code><span
style='font-size:10.0pt;color:#007700'>&nbsp;</span></code><code><span
style='font-size:10.0pt;color:#DD0000'>'f'</span></code><code><span
style='font-size:10.0pt;color:#007700'>);</span></code><span style='font-size:
10.0pt;font-family:"Courier New";color:#007700'><br>
<br>
</span><code><span style='font-size:10.0pt;color:#FF8000'>//&nbsp;here,&nbsp;you&nbsp;can&nbsp;see&nbsp;that&nbsp;the&nbsp;first&nbsp;expression&nbsp;is&nbsp;evaluated&nbsp;to&nbsp;'true',&nbsp;which</span></code><span
style='font-size:10.0pt;font-family:"Courier New";color:#FF8000'><br>
<code>//&nbsp;in&nbsp;turn&nbsp;evaluates&nbsp;to&nbsp;(<span class=SpellE>bool</span>)true,&nbsp;thus&nbsp;returning&nbsp;the&nbsp;true&nbsp;branch&nbsp;of&nbsp;the</code><br>
<code>//&nbsp;second&nbsp;ternary&nbsp;expression.</code><br>
</span><code><span style='font-size:10.0pt;color:#0000BB'>?&gt;</span></code><code><span
style='font-size:10.0pt;color:black'> </span></code></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
